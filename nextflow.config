params {
    outdir = 'results'
    input_vcf_fn = "$launchDir/input_vcfs.tsv"
    input_subpop_fn = "$launchDir/input_subpops.tsv"
    samples_included = ''
    meta = ''
    test = false
}

// As of version 22.08.0-edge the use Conda recipes specified using the conda
// directive needs to be enabled explicitly by setting the option shown below in
// the pipeline configuration file
conda.enabled = true

env {
    TMPDIR="/tmp"
}

profiles{
    standard {
        executor  
        {
            name = 'local'
            queueSize = 35
            cpus = 15 
            pollInterval = '30 sec'
        }
        process {
            // For faster testing
            // conda = "/local/projects-t3/toconnor_grp/bing.guo/miniconda3/envs/empirical"

            errorStrategy = {task.attempt < 5 ? 'retry': 'finish'}
            maxRetries = 5
            cpus = 1
            memory = '5 GB'
            cache = 'lenient' // NFS report inconsistent file timestamp for unmodified file; lenient mode of caching can avoid this problem.

            withName: "SEQARRAY_VCF_TO_GDS" {
                conda = "/local/chib/toconnor_grp/bing/mambaforge/envs/moimix"
                cpus = 15
                memory = {def mem = 20 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
            withName: "R_MOIMIX_FWS" {
                conda = "/local/chib/toconnor_grp/bing/mambaforge/envs/moimix"
                memory = {def mem = 20 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
            withName: "CALL_ISORELATE" {
                cpus = 2 
                memory = {def mem = 10 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
            withName: "BEAGLE_IMPUTE" {
                cpus = 6
            }
            withName: "BCFTOOLS_CONCAT" {
                cpus = 15
            }
        }
    }
    sge {
        executor {
            name = 'sge'
            queueSize = 200
            pollInterval = '30 sec'
        }

        process {
            // conda = "/local/projects-t3/toconnor_grp/bing.guo/miniconda3/envs/empirical"
            errorStrategy = { sleep(Math.pow(2 , task.attempt) * 20 as long); return task.attempt < 5 ? 'retry': 'finish'}
            maxRetries = 5
            cpus = 5
            memory = '30 GB'
            cache = 'lenient' // NFS report inconsistent file timestamp for unmodified file; lenient mode of caching can avoid this problem.

            queue = "threaded.q"
            penv = "thread"
            clusterOptions = "-P toconnor-lab -cwd -V"

            // For faster testing
            withName: "R_MOIMIX_FWS" {
                conda = "/local/chib/toconnor_grp/bing/mambaforge/envs/moimix"
            }
            withName: "SEQARRAY_VCF_TO_GDS" {
                conda = "/local/chib/toconnor_grp/bing/mambaforge/envs/moimix"
                cpus = 20
                memory = {def mem = 20 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
            withName: "CALL_ISORELATE" {
                cpus = 10
                memory = {def mem = 20 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
            withName: "BEAGLE_IMPUTE" {
                cpus = 6
            }
            // In this step, calculaing xirs stats requires quite a lot memory
            withName: "PROC_DIST_NE"{
                memory =  {def mem = 30 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
            withName: "RUN_IBDNE" {
                cpus = 6
                memory = {def mem = 10 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
            withName: "DEPLOID_PHASE_POLYCLONAL" {
                cpus = 3
                memory = {def mem = 5 * 2 ** task.attempt; mem > 300 ? '300 GB' : "$mem GB"}
            }
        
        }
    }
}

manifest {
    name            = 'posseleff_empirical'
    author          = 'Bing Guo'
    homePage        = 'https://github.com/posseleff_empirical'
    description     = 'Nextflow IBD analyses pipeline'
    mainScript      = 'main.nf'
    nextflowVersion = '>=22.10.0'
    version         = '0.2'
}

trace {
    enabled = true
    overwrite=true
    file = "${params.outdir}/pipeline_trace.txt"
    fields = 'task_id,hash,name,status,exit,realtime,%cpu,rss,workdir'
}
